version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kyc-adapter-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: kyc_adapter
      POSTGRES_USER: kyc_user
      POSTGRES_PASSWORD: your_secure_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - kyc-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kyc_user -d kyc_adapter"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (optional - for caching and session storage)
  redis:
    image: redis:7-alpine
    container_name: kyc-adapter-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kyc-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # KYC Adapter Application (for production)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kyc-adapter-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: kyc_user
      DB_PASSWORD: your_secure_password
      DB_NAME: kyc_adapter
      REDIS_URL: redis://redis:6379
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - kyc-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - production

  # PgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: kyc-adapter-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@kyc-adapter.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - kyc-network
    depends_on:
      - postgres
    profiles:
      - development

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  kyc-network:
    driver: bridge 