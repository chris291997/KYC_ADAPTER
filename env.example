# ================================
# KYC ADAPTER - ENVIRONMENT CONFIG
# ================================

# ----------------
# APPLICATION
# ----------------
NODE_ENV=development
PORT=3000

# ----------------
# DATABASE
# ----------------
# PostgreSQL connection settings
DB_HOST=localhost
DB_PORT=5432
DB_USERNAME=postgres
DB_PASSWORD=your_password_here
DB_DATABASE=kyc_adapter

# Enable query logging in development (true/false)
DB_LOGGING=true

# Database connection pool settings
DB_MAX_CONNECTIONS=100
DB_MIN_CONNECTIONS=10

# ----------------
# AUTHENTICATION
# ----------------

# JWT Configuration
# Generate a secure secret: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your-super-secret-jwt-key-here-replace-with-secure-random-string

# Token expiration settings
JWT_ACCESS_TOKEN_EXPIRES=15m
JWT_REFRESH_TOKEN_EXPIRES_DAYS=7

# JWT issuer and audience for validation
JWT_ISSUER=kyc-adapter
JWT_AUDIENCE_ADMIN=kyc-adapter-admin
JWT_AUDIENCE_TENANT=kyc-adapter-tenant

# API Key Encryption
# Generate: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
API_KEY_ENCRYPTION_KEY=your-32-char-encryption-key-here-replace-with-secure-random

# ----------------
# RATE LIMITING
# ----------------
# Rate limiting configuration per IP/API key
THROTTLE_TTL=60         # Time window in seconds
THROTTLE_LIMIT=100      # Max requests per window

# ----------------
# CORS & SECURITY
# ----------------
# Allowed origins for CORS (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# Trust proxy for getting real IP addresses (true/false)
TRUST_PROXY=false

# ----------------
# LOGGING
# ----------------
# Log level: error, warn, info, debug, verbose
LOG_LEVEL=info

# Log format: json, simple
LOG_FORMAT=json

# ----------------
# FILE UPLOADS
# ----------------
# Maximum file size for uploads (in bytes)
MAX_FILE_SIZE=10485760  # 10MB

# Allowed file types (comma-separated)
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,application/pdf

# Upload directory (relative to project root)
UPLOAD_DIR=uploads

# ----------------
# KYC PROVIDERS
# ----------------
# These will be used when KYC provider integration is implemented

# Regula Provider Settings
REGULA_API_URL=https://api.regulaforensics.com
REGULA_API_KEY=your-regula-api-key-here

# Persona Provider Settings  
PERSONA_API_URL=https://withpersona.com/api/v1
PERSONA_API_KEY=your-persona-api-key-here

# ----------------
# WEBHOOKS
# ----------------
# Webhook configuration for provider callbacks
WEBHOOK_SECRET=your-webhook-secret-key-here
WEBHOOK_TIMEOUT=30000   # Webhook timeout in milliseconds

# ----------------
# REDIS (Optional)
# ----------------
# Redis settings for caching and sessions (if implemented)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# ----------------
# SWAGGER/API DOCS
# ----------------
# Enable API documentation (true/false)
SWAGGER_ENABLED=true

# API documentation path
SWAGGER_PATH=api/docs

# ----------------
# MONITORING
# ----------------
# Health check settings
HEALTH_CHECK_DATABASE=true
HEALTH_CHECK_REDIS=false

# Metrics collection (true/false)
METRICS_ENABLED=false

# ----------------
# EMAIL (Future)
# ----------------
# Email service configuration for notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# Default sender email
FROM_EMAIL=noreply@kyc-adapter.com
FROM_NAME=KYC Adapter

# ----------------
# AWS S3 (Future)
# ----------------
# AWS S3 configuration for file storage
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-access-key
AWS_SECRET_ACCESS_KEY=your-secret-key
S3_BUCKET_NAME=kyc-adapter-files

# ----------------
# DEVELOPMENT ONLY
# ----------------
# These settings should only be used in development

# Enable detailed error messages (true/false)
DEBUG_MODE=true

# Disable authentication for testing (NEVER use in production)
DISABLE_AUTH=false

# Mock provider responses for testing
MOCK_PROVIDERS=false

# ================================
# SECURITY NOTES
# ================================
# 
# 1. Change ALL default values before deploying to production
# 2. Use strong, randomly generated secrets for JWT_SECRET and API_KEY_ENCRYPTION_KEY
# 3. Set NODE_ENV=production in production environments
# 4. Disable DEBUG_MODE and SWAGGER_ENABLED in production
# 5. Use environment-specific database credentials
# 6. Enable DB_LOGGING=false in production for performance
# 7. Set appropriate CORS_ORIGINS for your frontend applications
# 8. Store sensitive values in environment variables or secrets management
# 
# ================================ 